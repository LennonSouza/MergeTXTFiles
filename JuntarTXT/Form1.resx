<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ofd_Files.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>